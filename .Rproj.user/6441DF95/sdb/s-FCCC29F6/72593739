{
    "contents" : "#' Constructing trees from variant allele frequency using LICHeE.\n#' \n#' @name lichee2edge\n#' @param licheePath Path to lichee.jar file.\n#' @param vaf Matrix of variant allele frequency. For more detail of data format, see http://viq854.github.io/lichee/\n#' @param licheeparamIO List of input/output and display options.For detail see http://viq854.github.io/lichee/. You can set the parameters of (normal,save,showNetwork,showTree). \n#' @param licheeparamFilter List of SSNV filtering and calling parameters. For detail see http://viq854.github.io/lichee/. You can set the parameters of (absent,present,maxVAFValid,minProfileSupport).\n#' @param  licheeparamParamPhy List of phylogenetic network construction and tree search paramters. For detail see http://viq854.github.io/lichee/. You can set the parameters of (minClusterSize,minPrivateClusterSize,minRobustNodeSupport,maxClusterDist,completeNetwork,e,nTreeQPCheck).\n#' @return edgeList Rooted-constraint network of cancer lineage.\n#' @return edgeLenList Edge length vector corresponding to the edgeList. The edge legnth means #addition SSNVs from parental clone.\n#' @author Yusuke Matsui & Teppei Shimamura\n#' @export\n#' \nlichee2edge <- function(licheePath = NULL,vaf,licheeParamIO=NULL,licheeParamFilter=NULL,licheeParamPhy=NULL){\n  if(is.null(licheePath)){cat(\"set licheePath\\n\");stop()}\n  options(scipen = 9)\n#  current <- getwd()\n#  if(current!=licheePath){\n#    setwd(licheePath)\n#  }\n  if(is.null(unlist(licheeParamIO))){\n    normal <- 0\n    nsave <- 1\n    net <- FALSE\n    ntree <- 0\n  }else{\n    normal <- licheeParamIO$normal;if(is.null(normal)){normal <- 0}\n    nsave <- licheeParamIO$save;if(is.null(nsave)){nsave <- 1}\n    net <- licheeParamIO$net;if(is.null(net)){net <- FALSE}\n    ntree <- licheeParamIO$tree;if(is.null(ntree)){ntree <- 0}\n  }\n  \n  if(is.null(unlist(licheeParamFilter))){\n    present <- 0.05\n    absent <- 0.05\n    maxVAFValid <- 0.6\n    minProfileSupport <- 2\n  }else{\n    present <- licheeParamFilter$present;if(is.null(present)){present <- 0.05}\n    absent <- licheeParamFilter$absent;if(is.null(absent)){absent <- 0.05}\n    maxVAFValid <- licheeParamFilter$maxVAFValid;if(is.null(maxVAFValid)){maxVAFValid <- 0.6}\n    minProfileSupport <- licheeParamFilter$minProfileSupport;if(is.null(minProfileSupport)){minProfileSupport <- 2}\n  }\n  \n  if(is.null(unlist(licheeParamPhy))){\n    minClusterSize <- 2\n    minPrivateClusterSize <- 1\n    minRobustNodeSupport <- 2\n    maxClusterDist <- 0.2\n    completeNetwork <- FALSE\n    e <- 0.1\n    nTreeQPCheck <- 0\n  }else{\n    minClusterSize <- licheeParamPhy$minClusterSize;if(is.null( minClusterSize)){minClusterSize <- 2}\n    minPrivateClusterSize <- licheeParamPhy$minPrivateClusterSize;if(is.null(minProfileSupport)){minPrivateClusterSize <- 1}\n    minRobustNodeSupport <- licheeParamPhy$minRobustNodeSupport;if(is.null(minRobustNodeSupport)){minRobustNodeSupport <- 2}\n    maxClusterDist <- licheeParamPhy$maxClusterDist;if(is.null(maxClusterDist)){maxClusterDist <- 0.2}\n    completeNetwork <- licheeParamPhy$completeNetwork;if(is.null(completeNetwork)){completeNetwork <- FALSE}\n    e <- licheeParamPhy$e;if(is.null(e)){e <- 0.1}\n    nTreeQPCheck <- licheeParamPhy$nTreeQPCheck;if(is.null(nTreeQPCheck)){nTreeQPCheck <- 0}\n  }\n  \n  input <- \"input.txt\"\n  write.table(vaf,file=input,sep = \"\\t\",quote = F,row.names = F,col.names = T)\n  \n  #outdir <- paste0(licheePath,\"/out\")\n  #if(!dir.exists(\"out\")){dir.create(\"out\");outdir <- \"out\"}\n  \n  #output <- paste0(outdir,\"/o\",idx,\"_p\",present,\"_a\",absent,\"_mv\",maxVAFValid,\"_mps\",minProfileSupport,\"_mcs\",minClusterSize,\"_mpcs\",minPrivateClusterSize,\"_mrns\",minRobustNodeSupport,\"_mcd\",maxClusterDist,\"_e\",e,\"_m.txt\")\n  #output <- paste0(outdir,\"/o\",\"_p\",present,\"_a\",absent,\"-minClusterSize\",minClusterSize,\".txt\")\n  output <- \"./o.txt\"\n  \n  tmp <- \"tmp.txt\"\n  lichee <- paste0(licheePath,\"/lichee.jar\")\n  cmd <- paste(\"java -jar\", lichee, \"-build -i\", input, \"-o\",tmp,\"-minVAFPresent\", present, \"-maxVAFAbsent\",absent,\"-n 0\", \"-s\",nsave,\"-showTree\",ntree,\"-minClusterSize\",minClusterSize,\"-minPrivateClusterSize\", minPrivateClusterSize,\"-minRobustNodeSupport\",minRobustNodeSupport,\"-maxClusterDist\",maxClusterDist,\"-e\",e,\"-nTreeQPCheck\",nTreeQPCheck)  \n  \n  if(net){paste(cmd,\"-showNetwork\")}\n  if(completeNetwork){paste(cmd,\"-c\")}\n  \n  system(cmd,intern = F)\n  \n  #cmd <- paste(\"grep\",\"\\'>\\'\",\"tmp.txt\")\n  cmd <- paste(\"grep\",\"\\\\->\",tmp)\n  temp <- system(cmd,intern=T)\n  temp <- sapply(temp,function(x)gsub(\" -> \",\"\\t\",x))\n  temp <- sapply(temp,function(x)strsplit(x,\"\\t\"))\n  edgelist <- t(sapply(temp,function(x)as.numeric(x))) + 1\n  rownames(edgelist) <- NULL\n  \n  maxind <- max(edgelist)\n  cmd <- paste(\"head\",\"-n\",maxind,tmp)\n  temp <- system(cmd,intern=T)[-1]\n  temp <- sapply(temp,function(x)unlist(strsplit(x,\"]\"))[2])\n  temp <- sapply(temp,function(x)unlist(strsplit(x,\"\\t\"))[-1])\n  len <- sapply(temp,length);names(len) <- NULL\n  #edge <- cbind(edgelist,len)\n  #colnames(edge) <- c(\"v1\",\"v2\",\"length\")\n  #write.table(edge,file=output,row.names=F,col.names=T,quote=F,sep=\"\\t\")\n  #setwd(current)\n  try(invisible(file.remove(input)))\n  try(invisible(file.remove(tmp)))\n  return(list(edgeList=edgelist,edgeLenList=len))\n}\n",
    "created" : 1470995983461.000,
    "dirty" : false,
    "encoding" : "CP932",
    "folds" : "",
    "hash" : "1454374502",
    "id" : "72593739",
    "lastKnownWriteTime" : 1465349048,
    "path" : "D:/Dropbox (名古屋大学システム生物学分野)/matsui/git/PhyC/R/lichee2edge.R",
    "project_path" : "R/lichee2edge.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}