for(i in seq_along(fname)){
dat[[i]] <- read.table(fname[i])
cat(i,"\n")
}
setwd("/Users/matsui/Documents/lichee/LICHeE/data/")
fname <- list.files("mimoriken_CRC/")
dat <- vector("list",length(fname))
for(i in seq_along(fname)){
dat[[i]] <- read.table(fname[i])
cat(i,"\n")
}
fname
dat <- vector("list",length(fname))
for(i in seq_along(fname)){
dat[[i]] <- read.table(fname[i])
cat(i,"\n")
}
fname[i]
setwd("/Users/matsui/Documents/lichee/LICHeE/data/")
fname <- list.files("mimoriken_CRC/")
dat <- vector("list",length(fname))
for(i in seq_along(fname)){
dat[[i]] <- read.table(fname[i])
cat(i,"\n")
}
fname
fname[1]
read.table(fname[1])
dat <- vector("list",length(fname))
for(i in seq_along(fname)){
dat[[i]] <- read.table(paste0("mimoriken_CRC/fname[i]"))
cat(i,"\n")
}
dat <- vector("list",length(fname))
for(i in seq_along(fname)){
dat[[i]] <- read.table(paste0("mimoriken_CRC/","fname[i]"))
cat(i,"\n")
}
dat <- vector("list",length(fname))
for(i in seq_along(fname)){
dat[[i]] <- read.table(paste0("mimoriken_CRC/",fname[i]))
cat(i,"\n")
}
dat[[1]]
strsplit(dat[[1]],split = "::")
strsplit(rownames(dat[[1]]),split = "::")
strinf
info
info <- strsplit(rownames(dat[[1]]),split = "::")
info
info <- strsplit(rownames(dat[[1]]),split = "::")
chr <- sappy(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
info <- strsplit(rownames(dat[[1]]),split = "::")
chr <- sapply(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
chr
cbind(chr = chr,pos=pos,description=des,normal=0,dat[[i]])
chr
i=1
cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(data[[i]])),dat[[i]])
cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]])
dat2 <- dat
for(i in seq_along(dat)){
info <- strsplit(rownames(dat[[i]]),split = "::")
chr <- sapply(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
dat2[[i]] <- cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]])
}
dat2[[1]]
dat2 <- dat
for(i in seq_along(dat)){
info <- strsplit(rownames(dat[[i]]),split = "::")
chr <- sapply(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
dat2[[i]] <- cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]],deparse.level = 0)
}
head(dat2)
dat2 <- dat
for(i in seq_along(dat)){
info <- strsplit(rownames(dat[[i]]),split = "::")
chr <- sapply(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
dat2[[i]] <- cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]])
write.table(paste0("mimoriken_CRC/s",i,"txt"),quote = F,sep = "\t",row.names = F,col.names = T)
}
dat2 <- dat
for(i in seq_along(dat)){
info <- strsplit(rownames(dat[[i]]),split = "::")
chr <- sapply(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
dat2[[i]] <- cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]])
write.table(dat2[[i]],paste0("mimoriken_CRC/s",i,".txt"),quote = F,sep = "\t",row.names = F,col.names = T)
}
temp <- cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]])
dat2 <- dat
for(i in seq_along(dat)){
info <- strsplit(rownames(dat[[i]]),split = "::")
chr <- sapply(info,function(x)x[1])
pos <- sapply(info,function(x)as.numeric(x[2]))
des <- sapply(info,function(x)x[5])
temp <- cbind(chr = chr,pos=pos,description=des,normal=rep(0,nrow(dat[[i]])),dat[[i]])
dat2[[i]] <- temp[order(temp$pos,decreasing = F),]
write.table(dat2[[i]],paste0("mimoriken_CRC/s",i,".txt"),quote = F,sep = "\t",row.names = F,col.names = T)
}
library(ape)
edge <- matrix(0,17
0 , 6,
0 , 5,
0 , 2,
0 , 4,
0 , 9,
1 , 10,
4 , 15,
8 , 14,
8 , 3,
9 , 13,
9 , 16,
9 , 8,
9 , 12,
9 , 7,
13 , 11,
13 , 13)
edge <- matrix(c(0,17,
0 , 6,
0 , 5,
0 , 2,
0 , 4,
0 , 9,
1 , 10,
4 , 15,
8 , 14,
8 , 3,
9 , 13,
9 , 16,
9 , 8,
9 , 12,
9 , 7,
13 , 11,
13 , 13),ncol=2)
edge
librar(phylobase)
library(phylobase)
library(phylobase)
install.packages("phylobase")
library(phylobase)
phylo4(edge)
g <- graph(edgev,directed = T)
g <- graph(edge,directed = T)
library(igraph)
install.packages("igraph")
tree<- phylo4(edge-1)
edge-1
tree<- phylo4(edge)
edgev <- rep(-1,length(edge))
edgev
cnt <- 1
for(i in 1:nrow(edge)){
edgev[cnt] <- edge[i,1]
edgev[cnt+1] <- edge[i,2]
cnt <- cnt + 2
}
g <- graph(edgev,directed = T)
g <- graph(edgev,directed = T)
_graph
?graph
library(igraph)
g <- graph(edgev,directed = T)
g <- graph(edgev-1,directed = T)
g <- graph(edgev+1,directed = T)
plot(g)
tree<- phylo4(edge)
edge
edge[-17,]
write.table(edge,file="edge.txt",row.names=F,col.names=F)
write.table(edge,file="/Users/matsui/Documents/lichee/LICHeE/edge.txt",row.names=F,col.names=F)
edge <- matrix(c(0,9,
1 , 3,
1 , 4,
4 , 10,
4 , 5,
6 , 1,
8 , 7,
8 , 2,
9 , 8,
9 , 6),ncol=2)
write.table(edge,file="/Users/matsui/Documents/lichee/LICHeE/data/mimoriken_CRC/edge2.txt",row.names=F,col.names=F)
edge <- matrix(c(0 , 4,
0 , 3,
3 , 5,
3 , 6,
6 , 7,
6 , 10,
8 , 11,
8 , 2,
10 , 1,
10 , 12,
10 , 8,
12 , 9),ncol=2)
write.table(edge,file="/Users/matsui/Documents/lichee/LICHeE/data/mimoriken_CRC/edge5.txt",row.names=F,col.names=F)
write.table(edge,file="/Users/matsui/Documents/lichee/LICHeE/data/mimoriken_CRC/edge6.txt",row.names=F,col.names=F)
a <- read.table("mimoriken_CRC/test.rtf")
a <- read.table("mimoriken_CRC/p2.trees.txt")
a
a <- read.table("mimoriken_CRC/p2.trees.txt",header = F)
a <- read.csv("mimoriken_CRC/p2.trees.csv",header = F)
a
a[1,]
a[2,]
length(a[1,])
length(a[2,])
is.null(a[2,])
is.na(a[2,])
a <- read.csv("mimoriken_CRC/p2.trees.csv",header = F)
a
is.na(a[2,])
apply(a,1,function(x)sum(!is.na(x)))
num <- apply(a[,-1],1,function(x)sum(!is.na(x)))
num
prop <- num / sum(num)
prop
out <- cbind(a$V1,prop)
out
edge <- matrix(c(0 , 17,
0 , 6,
0 , 5,
0 , 2,
0 , 4,
0 , 9,
1 , 10,
4 , 15,
8 , 14,
8 , 3,
9 , 13,
9 , 16,
9 , 8,
9 , 12,
9 , 7,
13 , 11,
13 , 13),ncol=2)
nrow(out)
nrow(egde)
nrow(edge)
ind <- match(out[,1],edge[,2])
ind
out[,1]
ind <- match(out[,1],edge)
ind
out[1,]
out <- cbind(a$V1,prop);out[,1] <- as.integer(out[,1])
out
out <- cbind(a$V1,prop);out[,1] <- as.integer(out[,1])
ind1 <- match(out[,1],edge[,1])
ind2 <- match(out[,1],edge[,2])
ind1 <- match(out[,1],edge[,1])
ind2 <- match(out[,1],edge[,2])
ind1
ind2
library(ape)
?mlphylo
tr <- rtree(10)
### the default is the correlated rate model:
chr <- chronos(tr)
### strict clock model:
ctrl <- chronos.control(nb.rate.cat = 1)
chr.clock <- chronos(tr, model = "discrete", control = ctrl)
### How different are the rates?
attr(chr, "rates")
attr(chr.clock, "rates")
## Not run:
cal <- makeChronosCalib(tr, interactive = TRUE)
cal
### if you made mistakes, you can edit the data frame with:
### fix(cal)
chr <- chronos(tr, calibration = cal)
install.packages("phangorn")
library(phangorn)
?pml
?pml
data(yeast)tree <- NJ(dist.logDet(yeast))
?NJ
data(yeast)
tree <- NJ(dist.logDet(yeast))
tree
fit <- pml(tree, yeast, k=4, inv=.2)fit <- optim.pml(fit, optNni=TRUE,                 optGamma=TRUE, optInv=TRUE, model="GTR")
fit <- pml(tree, yeast, k=4, inv=.2)
fit <- pml(tree, yeast, k=4, inv=.2)fit <- optim.pml(fit, optNni=TRUE,optGamma=TRUE, optInv=TRUE, model="GTR")
fit
yeast
yeast$Scer
yeast$Spar
str(yeast)
?yeast
data(yeast)tree <- NJ(dist.logDet(yeast))fit <- pml(tree, yeast, k=4, inv= .2)fit <- optim.pml(fit, optNni=TRUE,                                  optGamma=TRUE, optInv=TRUE, model=“GTR”)BS <- bootstrap.pml (fit, optNni=TRUE)plotBS(fit$tree, BS, type = “phylogram”)
data(yeast)tree <- NJ(dist.logDet(yeast))fit <- pml(tree, yeast, k=4, inv= .2)fit <- optim.pml(fit, optNni=TRUE,
data(yeast)tree <- NJ(dist.logDet(yeast))fit <- pml(tree, yeast, k=4, inv= .2)fit <- optim.pml(fit, optNni=TRUE,
library(phangorn)
data(yeast)
tree <- NJ(dist.logDet(yeast))
fit <- pml(tree,yeast,k=4,inv=.2)
fit <- optim.pml(fit,optNni=TRUE,optGamma=TRUE, optInv=TRUE, model="GTR")
BS <- bootstrap.pml (fit, optNni=TRUE)
plotBS(fit$tree, BS, type = "phylogram")
yeast
yeast$Scer
?yeast
?dist.logDet
class(yeast)
mode(yeast)
length(yeast)
yeast$Scer
yeast$Smik
data(Laurasiatherian)class(Laurasiatherian)
data(Laurasiatherian)class(Laurasiatherian)
data(Laurasiatherian)
class(Laurasiatherian)
data(Laurasiatherian)class(Laurasiatherian)baseFreq(Laurasiatherian)subset(Laurasiatherian, subset=1:5)LauraChar <- as.character(Laurasiatherian)Laura <- phyDat(LauraChar, return.index=TRUE)all.equal(Laurasiatherian, Laura)allSitePattern(5)
data(Laurasiatherian)class(Laurasiatherian)baseFreq(Laurasiatherian)subset(Laurasiatherian, subset=1:5)LauraChar <- as.character(Laurasiatherian)Laura <- phyDat(LauraChar, return.index=TRUE)all.equal(Laurasiatherian, Laura)allSitePattern(5)
?as.phyDat
data(Laurasiatherian)
class(Laurasiatherian)
Laurasiatherian
baseFreq(Laurasiatherian)
subset(Laurasiatherian, subset=1:5)
Laurasiatherian
Laurasiatherian$Platypus
Laurasiatherian$Possum
library(phygorn)
